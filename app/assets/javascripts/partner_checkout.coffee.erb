
handlePaymentToken = (token, auth_token, partner_id, partner_email, value, credit) ->
  $('#payment_form').html "<script> \
		var createCharge = function(amount, auth_token, partner_id) { \
			var form = $('<form>'); \
			form.attr({ method: 'post' }); \
			form.attr({ action: '<%= Rails.application.routes.url_helpers.credits_url :only_path => true %>' }); \
			form.append(getInput('credit[amount]', amount.substr(0, amount.length - 2))); \
      form.append(getInput('credit[remarks]', 'Replenish Credits')); \
      form.append(getInput('verification_code', '" + token + "')); \
      form.append(getInput('partner_id', partner_id)); \
			form.append(getInput('authenticity_token', auth_token)); \
      $('body').append(form); \
      form.submit(); \
		}; \
    var getInput = function(name, value) { \
			var input = $('<input>'); \
      input.attr({ type: 'hidden' }); \
			input.attr({ name: name }); \
			input.val(value); \
			return input; \
		}; \
    var chargeError = function(message) {\
      var alert = $('#alert'); \
      var errorDiv = $('<div>');\
      errorDiv.attr('class', 'alert alert-danger');\
      errorDiv.attr('role', 'alert');\
      errorDiv.append(message);\
      alert.append(errorDiv);\
    };\
    var verifyCharge = function(amount, auth_token, partner_id) {\
      $.ajax('<%=  Rails.application.routes.url_helpers.verify_checkout_index_url :only_path => true %>', {\
        type: 'GET',\
        data: { 'token': '" + token + "' },\
        success: function(response) {\
          if (response['responseMessage'] == 'Approved')\
            createCharge(amount, auth_token, partner_id);\
          else \
            chargeError('There was a problem verifying the charge.');\
        },\
        error: function(jqXHR, textStatus, errorThrown) {\
        }\
      });\
    };\
		Checkout.removeAllEventHandlers(Checkout.Events.CARD_CHARGED); \
    Checkout.render({ \
      debugMode: true, \
      publicKey: '<%= Rails.configuration.checkout_pk %>', \
      paymentToken: '" + token + "', \
      customerEmail: '" + partner_email + "', \
      value: '" + value + "', \
      currency: 'USD', \
      widgetContainerSelector: '.payment-form', \
      widgetColor: '#4296C6', \
      themeColor: '#3075dd', \
      buttonColor: '#51c470', \
      labelColor: '#333333', \
      renderMode: Checkout.RenderModes.PAY_BUTTON_ONLY, \
      paymentMode: 'card', \
      cardCharged: function(event) { \
        data = event.data;\
        message = event.msg; \
				verifyCharge('" + credit + "', '" + auth_token + "', '" + partner_id + "'); \
      } \
    });</script>"

getPaymentToken = (amount) ->
  $.ajax '<%=  Rails.application.routes.url_helpers.payment_token_checkout_index_url :only_path => true %>',
    type: 'GET',
    headers: { 'Content-Type': 'application/json' },
    data: { 'value': amount },
    success: (response) ->
      if response.errorCode
        console.log response.message
      else
        handlePaymentToken response.id, response.form_authenticity_token, response.partner_id, response.partner_email, amount
    error: (jqXHR, textStatus, errorThrown) ->
      jsonResponse = jQuery.parseJSON jqXHR.responseText
      showError jsonResponse.message

getPaymentTokenFor = (element, amount) ->
  $.ajax '<%=  Rails.application.routes.url_helpers.payment_token_checkout_index_url :only_path => true %>',
    type: 'GET',
    headers: { 'Content-Type': 'application/json' },
    data: { 'value': amount },
    success: (response) ->
      if response.errorCode
        console.log response.message
      else
        element.attr "data-payment-token", response.id
        element.attr "data-auth-token", response.form_authenticity_token
        element.attr "data-partner-id", response.partner_id
        element.attr "data-partner-email", response.partner_email
        handlePaymentToken element.attr("data-payment-token"), element.attr("data-auth-token"), element.attr("data-partner-id"), element.attr("data-partner-email"), amount, element.attr("data-credit")
        $("#transaction-page").faLoading(false)
    error: (jqXHR, textStatus, errorThrown) ->
      jsonResponse = jQuery.parseJSON jqXHR.responseText
      showError jsonResponse.message


showError = (message) ->
  alert = $('#alert')
  errorDiv = $('<div>')
  errorDiv.attr { class: 'alert alert-danger' }
  errorDiv.attr { role: 'alert' }
  errorDiv.append message
  alert.append errorDiv

clearErrors = ->
  alert = $('#alert')
  alert.empty()

count = 0

$(document).ready ->
  $('#pay_via_paypal').on 'click', () ->
    $('#replenish_form').attr('action', '<%= Rails.application.routes.url_helpers.paypal_setup_payment_path %>')
  $('#pay_via_dragon_pay').on 'click', () ->
    $('#replenish_form').attr('action', '<%= Rails.application.routes.url_helpers.dragon_pay_setup_payment_path %>')
  if $('#replenish_total')[0]
    $("#transaction-page").faLoading()
    getPaymentTokenFor $('#replenish_total'), $('#replenish_total').attr("data-value")

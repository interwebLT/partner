$(document).ready ->
  record_type = ""

  $(".srv-fields").hide()

  change_fields = (type) ->
    if type == "SRV"
      $(".srv-fields").show()
      $(".non-srv-fields").hide()
    else
      $(".srv-fields").hide()
      $(".non-srv-fields").show()
    return

  change_validators = (type) ->
    valid_domain = /^(([a-zA-Z0-9-_\.]{1})|([a-zA-Z0-9-_\.]{1}[a-zA-Z0-9-_\.]{1})|([a-zA-Z0-9-_\.]{1}[0-9]{1})|([0-9]{1}[a-zA-Z0-9-_\.]{1})|([a-zA-Z0-90-9-_\.][a-zA-Z0-9-0-9-_\.]{1,61}[a-zA-Z0-9-\.]))\.([a-zA-Z]{2,6}|[a-zA-Z0-9-]{2,30}\.[a-zA-Z]{2,3})$/
    valid_ip = /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/
    valid_ipv6 = /(^\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(%.+)?\s*$)/
    has_more_than_one_dot = /.*\..*\../
    printable_ascii_char = /^[ -~]*$/

    $.validator.addMethod 'domainNameValidation', ((value, element) ->
      valid_domain.test value
    ), 'It should be a valid Domain Name.'

    switch type
      when "NS", "CNAME"
        $.validator.addMethod 'powerdnsContentValidation', ((value, element) ->
          valid_domain.test value
        ), 'It should be a valid Domain format'
        $.validator.addMethod 'subdomainValidation', ((value, element) ->
          has_more_than_one_dot.test value
        ), 'It should have a sub domain.'
      when "A"
        $.validator.addMethod 'powerdnsContentValidation', ((value, element) ->
          valid_ip.test value
        ), 'It should be a valid IP address format.'
      when "AAAA"
        $.validator.addMethod 'powerdnsContentValidation', ((value, element) ->
          valid_ipv6.test value
        ), 'It should be a valid IPv6 format.'
      # when "MX" then <-- No given validations yet
      when "TXT"
        $.validator.addMethod 'powerdnsContentValidation', ((value, element) ->
          printable_ascii_char.test value
        ), 'It should be a printable ASCII Char.'
      when "SRV" then
    return

  $ ->

    record_type = $('#powerdns_record_type').val()
    change_fields(record_type)
    change_validators(record_type)

    $('#powerdns_record_type').click((e) ->
      record_type = $(this).val()
      change_fields(record_type)
      change_validators(record_type)
    ).keyup((e) ->
      record_type = $(this).val()
      change_fields(record_type)
      change_validators(record_type)
    )

    $(".new_powerdns_record").validate
      errorPlacement: (label, element) ->
        label.addClass('error-validator-label')
        label.insertAfter(element)
      rules:
        "powerdns_record[name]":
          required: true,
          domainNameValidation:
            depends: (element) ->
              record_type == 'AAAA' || record_type == 'NS' || record_type == 'TXT' || record_type == 'CNAME' || record_type == 'TXT'
          subdomainValidation:
            depends: (element) ->
              record_type == 'NS'
        "powerdns_record[type]":
          required: true
        "powerdns_record[prio]":
          required: depends: (element) ->
            record_type == 'MX'
        "powerdns_record[content]":
          required: true,
          powerdnsContentValidation:
            depends: (element) ->
              record_type == 'AAAA' || record_type == 'A' || record_type == 'NS' || record_type == 'TXT' || record_type == 'CNAME'
        "powerdns_record[preferences][srv_content]":
          required: true,
          domainNameValidation: true
      highlight: (element) ->
        $(element).addClass('has-input-error');
      unhighlight: (element) ->
        $(element).removeClass('has-input-error');
    return